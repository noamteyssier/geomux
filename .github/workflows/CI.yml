name: Python Package CI

on: [push]

jobs:
  ci:
    needs: [ostest, full-ci]
    name: CI
    runs-on: 'ubuntu-latest'
    steps:
      - name: Done
        run: exit 0

  full-ci:
    runs-on: 'ubuntu-latest'
    strategy:
      max-parallel: 5
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv and create venv
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv venv

      - name: Install project
        run: |
          . .venv/bin/activate
          uv pip install -e .[dev]
          pip list

      - name: Debug - Print Python path and package contents
        run: |
          . .venv/bin/activate
          python -c "import sys; print(sys.path)"
          python -c "import geomux; print(dir(geomux)); print(geomux.__file__)"

      - name: Debug - Check package structure
        run: |
          . .venv/bin/activate
          pip show -f geomux

      - name: Debug - Print __main__.py contents
        run: |
          echo "Contents of __main__.py:"
          cat geomux/__main__.py

      - name: Test with pytest
        run: |
          . .venv/bin/activate
          pytest -v

      - name: Debug - Check Python path for CLI
        run: |
          . .venv/bin/activate
          python -c "import sys; import geomux; print(sys.path); print(geomux.__file__)"
          which geomux

      - name: Debug - Run module directly
        run: |
          . .venv/bin/activate
          python -m geomux -i example/example.tsv.gz -o results_table.tab

      - name: Test table io from commandline
        run: |
          . .venv/bin/activate
          geomux -i example/example.tsv.gz -o results_table.tab

      - name: Test adat io from commandline
        run: |
          . .venv/bin/activate
          geomux -i example/example.h5ad -o results_table.tab

  ostest:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 5
      matrix:
        os: ["windows-latest", "macos-latest"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install uv and create venv
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv venv

    - name: Install project
      run: |
        . .venv/bin/activate  # Use 'call .venv\Scripts\activate' on Windows
        uv pip install -e .[dev]
        pip list

    - name: Test with pytest
      run: |
        . .venv/bin/activate  # Use 'call .venv\Scripts\activate' on Windows
        pytest -v

    - name: Test table io from commandline
      run: |
        . .venv/bin/activate  # Use 'call .venv\Scripts\activate' on Windows
        geomux -i example/example.tsv.gz -o results_table.tab

    - name: Test adat io from commandline
      run: |
        . .venv/bin/activate  # Use 'call .venv\Scripts\activate' on Windows
        geomux -i example/example.h5ad -o results_table.tabg