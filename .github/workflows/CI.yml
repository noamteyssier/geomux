name: Python Package CI

on: [push]

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  ci:
    needs: [
      # ostest, 
      full-ci,
    ]
    name: CI
    runs-on: 'ubuntu-latest'
    steps:
      - name: Done
        run: exit 0

  full-ci:
    runs-on: 'ubuntu-latest'
    strategy:
      max-parallel: 5
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        
      - name: Set up Python ${{ matrix.python-version }}
        run: |
          uv python install ${{ matrix.python-version }}
          uv venv
  
      - name: Install project
        run: |
          uv sync --all-extras --dev

      - name: Activate venv
        run: |
          source .venv/bin/activate

      - name: Test with pytest
        run: |
          source .venv/bin/activate
          pytest -v

      - name: Test table io from commandline
        run: |
          source .venv/bin/activate
          geomux -i example/example.tsv.gz -o results_table.tab

      - name: Test adat io from commandline
        run: |
          source .venv/bin/activate
          geomux -i example/example.h5ad -o results_table.tab

  # ostest:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     max-parallel: 5
  #     matrix:
  #       os: ["windows-latest", "macos-latest"]

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Install uv
  #     uses: astral-sh/setup-uv@v3

  #   - name: Set up Python 3.11
  #     run: uv python install 3.11

  #   - name: Install project
  #     run: |
  #       uv sync --all-extras --dev

  #   - name: Test with pytest
  #     run: |
  #       uv run pytest -v

  #   - name: Test table io from commandline
  #     run: |
  #       uv run geomux -i example/example.tsv.gz -o results_table.tab

  #   - name: Test adat io from commandline
  #     run: |
  #       uv run geomux -i example/example.h5ad -o results_table.tab